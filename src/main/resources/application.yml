server:
  port: ${USER_CLIENT_PORT:8081}
  servlet:
    context-path: /api

spring:
  application:
    name: notification-backend-api

  datasource:
    url: jdbc:postgresql://${DB_URI:localhost}:${DB_PORT:5432}/notification
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        default_schema: notification_schema
    open-in-view: false

  security:
    security-key: ${SECURITY_KEY:6c9c5acb3e09048b863a865d1b524c935b9cfe8c401a1d5396cd63749e02f89427d9543b31d9c0ea1e88089f8412932e2886b273d7bc7920bea814b847dc7ad1}
    token-expiration: ${TOKEN_EXPIRATION:14400000}

  data:
    redis:
      host: ${REDIS_URI:localhost}
      port: ${REDIS_PORT:6379}
      timeout:
        default: ${REDIS_TIMEOUT:3000} # 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  kafka:
    consumer:
      group-id: ${KAFKA_GROUP_ID:notification-user-api}
      bootstrap-servers: localhost:9092
    producer:
        send-event-notification-topic: NotificationEventTopic

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

  prometheus:
    metrics:
      export:
        enabled: true
